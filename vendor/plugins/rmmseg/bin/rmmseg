#!/usr/bin/env ruby

require 'rmmseg'
include RMMSeg

require 'getoptlong'

def print_usage
  puts <<EOF
#{__FILE__}  Segment Chinese text. Read from stdin and print to stdout.

Options:
  -h
  --help      Print this message

  -a
  --algorithm Select segment algorithm. Valid values are 'complex' and
              'simple'. 'simple' is the default one.

  -A
  --ambiguity Select a behavior when an ambiguity occurs. Valid values
              are 'raise_exception' and 'select_first'. 'select_first'
              is the default one.

  -s
  --separator Select the separator of the segmented text. Default is
              space.
EOF
  exit 0
end

separator = " "

optparser = GetoptLong.new
optparser.set_options(["-a", "--algorithm", GetoptLong::REQUIRED_ARGUMENT],
                      ["-A", "--ambiguity", GetoptLong::REQUIRED_ARGUMENT],
                      ["-s", "--separator", GetoptLong::REQUIRED_ARGUMENT],
                      ["-h", "--help", GetoptLong::NO_ARGUMENT])

loop do
  begin
    opt, arg = optparser.get
    break if not opt

    case opt
    when "-h"
      print_usage
      
    when "-a"
      Config.algorithm = arg.to_sym

    when "-A"
      Config.on_ambiguity = arg.to_sym

    when "-s"
      separator = arg
    end
    
  rescue => err
    puts err
    exit 1
  end
end

puts segment(STDIN.read).join(separator)
